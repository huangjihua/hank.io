(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{436:function(t,e,r){"use strict";r.r(e);var s=r(0),_=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("现如今前端可谓包罗万象，产品形态五花八门，涉猎极广，什么高大上的基础库/框架，拽炫酷的宣传页面，还有屌炸天的小游戏……不过这些一两个文件的小项目并非是前端技术的主要应用场景，更具商业价值的则是复杂的Web应用，它们功能完善，界面繁多，为用户提供了完整的产品体验，可能是新闻聚合网站，可能是在线购物平台，可能是社交网络，可能是金融信贷应用，可能是音乐互动社区，也可能是视频上传与分享平台……")]),t._v(" "),r("p",[t._v("如此复杂的Web应用，动辄几十上百人共同开发维护，其前端界面通常也颇具规模，工程量不亚于一般的传统GUI软件：")]),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("历史悠久的前端开发，始终像是放养的野孩子，原始如斯，不免让人慨叹！")]),t._v(" "),t._m(4),t._v(" "),r("p",[t._v("现在的前端开发倒也并非一无所有，回顾一下曾经经历过或听闻过的项目，为了提升其前端开发效率和运行性能，前端团队的工程建设大致会经历三个阶段：")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("基本上现在没有人完全从0开始做网站，哪怕是政府项目用个jquery都很正常吧，React/Angularjs等框架横空出世，解放了不少生产力，合理的技术选型可以为项目节省许多工程量这点毋庸置疑。")]),t._v(" "),t._m(7),t._v(" "),r("p",[r("img",{attrs:{src:"/images/front_end_build_tools.png",alt:"前端构建工具"}}),r("br"),t._v("\n工具介绍参考"),r("router-link",{attrs:{to:"./你不知道的构建工具.html"}},[t._v("你不知道的构建工具")])],1),t._v(" "),r("p",[t._v("选型之后基本上就可以开始敲码了，不过光解决开发效率还不够，必须要兼顾运行性能。前端工程进行到第二阶段会选型一种构建工具，对代码进行压缩，校验，之后再以页面为单位进行简单的资源合并。")]),t._v(" "),r("p",[t._v("前端开发工程化程度之低，常常出乎我的意料，我之前在百度工作时是没有多少概念的，直到离开大公司的温室，去到业界与更多的团队交流才发现，能做到这个阶段在业界来说已然超出平均水平，属于“具备较高工程化程度”的团队了，查看网上形形色色的网页源代码，能做到最基本的JS/CSS压缩的Web应用都已跨入标准互联网公司行列，不难理解为什么很多前端团队对于前端工程构建的认知还仅停留在“压缩、校验、合并”这种程度。")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),r("p",[t._v("不管你将来是否要复用某段代码，你都有充分的理由将其分治为一个模块。")]),t._v(" "),r("p",[t._v("JS模块化方案很多，AMD/CommonJS/UMD/ES6 Module等，对应的框架和工具也一大堆，说起来很烦，大家自行百度吧；CSS模块化开发基本都是在less、sass、stylus等预处理器的import/mixin特性支持下实现的。")]),t._v(" "),r("p",[t._v("虽然这些技术由来已久，在如今这个“言必及React”的时代略显落伍，但想想业界的绝大多数团队的工程化落后程度，放眼望去，毫不夸张的说，能达到第三阶段的前端团队已属于高端行列，基本具备了开发维护一般规模Web应用的能力。")]),t._v(" "),r("p",[t._v("然而，做到这些就够了么？Naive！")]),t._v(" "),t._m(11),t._v(" "),r("p",[t._v("前端是一种技术问题较少、工程问题较多的软件开发领域。")]),t._v(" "),r("p",[t._v("当我们要开发一款完整的Web应用时，前端将面临更多的工程问题，比如：")]),t._v(" "),r("ul",[r("li",[t._v("大体量：多功能、多页面、多状态、多系统；")]),t._v(" "),r("li",[t._v("大规模：多人甚至多团队合作开发；")]),t._v(" "),r("li",[t._v("高性能：CDN部署、"),r("a",{attrs:{href:"https://developers.google.com/speed/docs/insights/LeverageBrowserCaching",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存控制"),r("OutboundLink")],1),t._v("、"),r("a",{attrs:{href:"https://developers.google.com/speed/docs/insights/LeverageBrowserCaching",target:"_blank",rel:"noopener noreferrer"}},[t._v("文件指纹"),r("OutboundLink")],1),t._v("、缓存复用、请求合并、按需加载、同步/异步加载、移动端"),r("a",{attrs:{href:"https://developers.google.com/speed/docs/insights/mobile",target:"_blank",rel:"noopener noreferrer"}},[t._v("首屏CSS内嵌"),r("OutboundLink")],1),t._v("、HTTP 2.0服务端"),r("a",{attrs:{href:"http://chimera.labs.oreilly.com/books/1230000000545/ch12.html#HTTP2_PUSH",target:"_blank",rel:"noopener noreferrer"}},[t._v("资源推送"),r("OutboundLink")],1),t._v("。")])]),t._v(" "),r("blockquote",[r("p",[t._v("扩展阅读："),r("a",{attrs:{href:"https://github.com/fouber/blog/issues/6",target:"_blank",rel:"noopener noreferrer"}},[t._v("大公司里怎样开发和部署前端代码？"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("这些无疑是一系列严肃的系统工程问题。")]),t._v(" "),r("p",[t._v("前面讲的三个阶段虽然相比曾经“茹毛饮血”的时代进步不少，但用于支撑第四阶段的多人合作开发以及精细的性能优化似乎还欠缺点什么。")]),t._v(" "),r("p",[t._v("到底，缺什么呢？")]),t._v(" "),t._m(12),t._v(" "),r("p",[r("a",{attrs:{href:"https://div.io/topic/1275",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章来源"),r("OutboundLink")],1)])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"前端如何高效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端如何高效"}},[this._v("#")]),this._v(" 前端如何高效?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("从本质上讲，所有Web应用都是一种运行在网页浏览器中的软件，这些软件的图形用户界面（Graphical User Interface，简称GUI）即为前端。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前端，是一种gui软件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端，是一种gui软件"}},[this._v("#")]),this._v(" 前端，是一种GUI软件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/fe-pro-tree.jpg",alt:"复杂的Web应用"}}),e("br"),this._v("\n尽管Web应用的复杂程度与日俱增，用户对其前端界面也提出了更高的要求，但时至今日仍然没有多少前端开发者会从软件工程的角度去思考前端开发，来助力团队的开发效率，更有甚者还对前端保留着”如玩具般简单“的刻板印象，日复一日，刀耕火种。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前端工程的三个阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端工程的三个阶段"}},[this._v("#")]),this._v(" 前端工程的三个阶段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第一阶段：库-框架选"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一阶段：库-框架选"}},[this._v("#")]),this._v(" 第一阶段：库/框架选")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/frame.jpg",alt:"前端框架/库"}}),e("br"),this._v("\n前端工程建设的第一项任务就是根据项目特征进行技术选型。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第二阶段：简单构建优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二阶段：简单构建优化"}},[this._v("#")]),this._v(" 第二阶段：简单构建优化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第三阶段：js-css模块化开"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三阶段：js-css模块化开"}},[this._v("#")]),this._v(" 第三阶段：JS/CSS模块化开")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/module-tools.jpg",alt:"前端构建工具"}}),e("br"),this._v("\n分而治之是软件工程中的重要思想，是复杂系统开发和维护的基石，这点放在前端开发中同样适用。在解决了基本开发效率运行效率问题之后，前端团队开始思考维护效率，模块化是目前前端最流行的分治手段。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("很多人觉得模块化开发的工程意义是复用，我不太认可这种看法，在我看来，模块化开发的最大价值应该是分治，是分治，分治！（重说三）。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第四阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四阶段"}},[this._v("#")]),this._v(" 第四阶段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("进入第四阶段，我们只需做好两件事就能大幅提升前端开发效率，并且兼顾运行性能，那就是——组件化开发与资源管理。")])])}],!1,null,null,null);e.default=_.exports}}]);